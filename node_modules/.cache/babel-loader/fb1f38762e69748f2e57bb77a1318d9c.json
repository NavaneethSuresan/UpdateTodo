{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/newtodo/updated_todo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const isGreen = true;\n  const names = [1, 2, 3, 4, 5];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Job, {\n      salary: 10000,\n      position: \"je\",\n      company: \"amazon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Job, {\n      salary: 20000,\n      position: \"fde\",\n      company: \"meta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Job, {\n      salary: 30000,\n      position: \"bde\",\n      company: \"tesla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: isGreen ? 'green' : 'red'\n      },\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), isGreen && /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"This is a button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 53\n    }, this), names.map(val => {\n      return val > 1 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 37\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst Job = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", props.salary]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", props.position]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", props.company]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = Job;\n\nconst Count = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  let update = () => {\n    setCount = count + 1;\n    return;\n  };\n};\n\n_s(Count, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n\n_c3 = Count;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Job\");\n$RefreshReg$(_c3, \"Count\");","map":{"version":3,"names":["useState","App","isGreen","names","color","map","val","Job","props","salary","position","company","Count","count","setCount","update"],"sources":["/Users/apple/Desktop/newtodo/updated_todo/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const isGreen=true;\n  const names=[1,2,3,4,5]\n  \n  return (\n    <div className=\"App\">\n      <Job salary={10000} position='je'company='amazon'/>\n      <Job salary={20000} position='fde'company='meta'/>\n      <Job salary={30000} position='bde'company='tesla'/>\n      <h1 style={{color:isGreen?'green':'red'}}>hello</h1>\n      {isGreen && <button>This is a button</button>}<br></br>\n      {names.map((val)=>{\n       return val>1? <h1>{val}</h1>:<b>None</b>\n        \n       })}\n\n     \n    </div>\n  );\n}\nconst Job=(props)=>{\n return (\n   <>\n   <h1> {props.salary}</h1>\n   <h1> {props.position}</h1>\n   <h1> {props.company}</h1>\n   </>\n\n )\n}\nconst Count=()=>{\n  const [count,setCount]=useState(0)\n  let update=()=>{\n    setCount=count+1\n    return\n  }\n\n}\n\nexport default App;\n"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;EACb,MAAMC,OAAO,GAAC,IAAd;EACA,MAAMC,KAAK,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAZ;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,GAAD;MAAK,MAAM,EAAE,KAAb;MAAoB,QAAQ,EAAC,IAA7B;MAAiC,OAAO,EAAC;IAAzC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,GAAD;MAAK,MAAM,EAAE,KAAb;MAAoB,QAAQ,EAAC,KAA7B;MAAkC,OAAO,EAAC;IAA1C;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,GAAD;MAAK,MAAM,EAAE,KAAb;MAAoB,QAAQ,EAAC,KAA7B;MAAkC,OAAO,EAAC;IAA1C;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAI,KAAK,EAAE;QAACC,KAAK,EAACF,OAAO,GAAC,OAAD,GAAS;MAAvB,CAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,EAKGA,OAAO,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALd,eAKgD;MAAA;MAAA;MAAA;IAAA,QALhD,EAMGC,KAAK,CAACE,GAAN,CAAWC,GAAD,IAAO;MACjB,OAAOA,GAAG,GAAC,CAAJ,gBAAO;QAAA,UAAKA;MAAL;QAAA;QAAA;QAAA;MAAA,QAAP,gBAAsB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA7B;IAEC,CAHD,CANH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;KAnBQL,G;;AAoBT,MAAMM,GAAG,GAAEC,KAAD,IAAS;EAClB,oBACE;IAAA,wBACA;MAAA,gBAAMA,KAAK,CAACC,MAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA,gBAAMD,KAAK,CAACE,QAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAA,gBAAMF,KAAK,CAACG,OAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA,gBADF;AAQA,CATD;;MAAMJ,G;;AAUN,MAAMK,KAAK,GAAC,MAAI;EAAA;;EACd,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBd,QAAQ,CAAC,CAAD,CAA/B;;EACA,IAAIe,MAAM,GAAC,MAAI;IACbD,QAAQ,GAACD,KAAK,GAAC,CAAf;IACA;EACD,CAHD;AAKD,CAPD;;GAAMD,K;;MAAAA,K;AASN,eAAeX,GAAf"},"metadata":{},"sourceType":"module"}